{"version":3,"sources":["components/homePage/HomePage.tsx","api/api.js","components/personRow/PersonRow.tsx","components/peopleTable/peopleTable.tsx","components/peoplePage/peoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","a","fetch","promis","json","result","PersonRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","filteredPeople","useState","preparedList","setPreparedLis","useEffect","className","map","slug","PeoplePage","allPeople","setAllPeaple","setFilteredPeaple","getPeople","then","array","_index","arr","find","man","woman","replaceParent","length","App","to","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"wPAAaA,EAAW,WACtB,OACE,2C,yFCFG,8BAAAC,EAAA,sEAEgBC,MAAM,qEAFtB,cAECC,EAFD,gBAIgBA,EAAOC,OAJvB,cAICC,EAJD,yBAMEA,GANF,4C,sBCOA,IAAMC,EAA6B,SAAC,GAAgB,IAAD,IAAbC,EAAa,EAAbA,OAC3C,OACE,qCACE,6BAAKA,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,8BAAK,UAAAJ,EAAOK,kBAAP,eAAmBJ,OAAQ,mBAChC,8BAAK,UAAAD,EAAOM,kBAAP,eAAmBL,OAAQ,uBCLzBM,G,MAA+B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC7C,EAAuCC,mBAA2B,IAAlE,mBAAOC,EAAP,KAAqBC,EAArB,KAMA,OAJAC,qBAAU,WACRD,EAAeH,KACd,IAGD,mCACE,wBAAOK,UAAU,mBAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,OAAd,kBACA,oBAAIA,UAAU,OAAd,iBACA,oBAAIA,UAAU,OAAd,kBACA,oBAAIA,UAAU,OAAd,kBACA,oBAAIA,UAAU,OAAd,oBACA,oBAAIA,UAAU,OAAd,yBAGJ,gCACGH,EAAaI,KAAI,SAACd,GAAD,OAChB,oBAAIa,UAAU,SAAd,SACE,cAAC,EAAD,CAAWb,OAAQA,KADOA,EAAOe,kBCjBlCC,EAAa,WACxB,MAAkCP,mBAA2B,IAA7D,mBAAOQ,EAAP,KAAkBC,EAAlB,KAEA,EAA4CT,mBAA2BQ,GAAvE,mBAAOT,EAAP,KAAuBW,EAAvB,KAUA,OARAP,qBAAU,YHpBL,WAAP,gCGqBIQ,GAAYC,MAAK,SAACC,GAAD,OAAWJ,EAhBV,SAACI,GACrB,OAAOA,EAAMR,KAAI,SAACd,EAAgBuB,EAAQC,GAAzB,mBAAC,eAEXxB,GAFU,IAGbM,WAAYkB,EAAIC,MAAK,SAAAC,GAAG,OAAIA,EAAIzB,OAASD,EAAOM,eAAe,KAC/DD,WAAYmB,EAAIC,MAAK,SAAAE,GAAK,OAAIA,EAAM1B,OAASD,EAAOK,eAAe,UAW5BuB,CAAcN,SACtD,IAEHV,qBAAU,WACRO,EAAkBF,KACjB,CAACA,IAGF,mCAC6B,IAA1BT,EAAeqB,OAEZ,mEAEA,cAAC,EAAD,CAAarB,eAAgBA,OCAxBsB,EAxBH,kBACV,sBAAKjB,UAAU,gBAAf,UACE,iCACE,gCACE,cAAC,IAAD,CAAMkB,GAAG,IAAT,sBACC,IACD,cAAC,IAAD,CAAMA,GAAG,UAAT,6BAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUF,GAAG,IAAIG,SAAO,MACrD,cAAC,IAAD,CACEF,KAAK,IACLC,QACE,wDCpBVE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8855bfdc.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1>HomePage</h1>\n  );\n};\n","export async function getPeople() {\n  // eslint-disable-next-line max-len\n  const promis = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n\n  const result = await promis.json();\n\n  return result;\n}\n","import React from 'react';\nimport { PreperedPerson } from '../../react-app-env';\n\ninterface Props {\n  person: PreperedPerson,\n}\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  return (\n    <>\n      <td>{person.name}</td>\n      <th>{person.sex}</th>\n      <th>{person.born}</th>\n      <th>{person.died}</th>\n      <th>{person.motherName?.name || 'Don\\'t know her'}</th>\n      <th>{person.fatherName?.name || 'Don\\'t know him'}</th>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { PreperedPerson } from '../../react-app-env';\nimport { PersonRow } from '../personRow/PersonRow';\n\nimport './peopleTable.css';\n\ninterface Props {\n  filteredPeople: PreperedPerson[]\n}\n\nexport const PeopleTable: React.FC<Props> = ({ filteredPeople }) => {\n  const [preparedList, setPreparedLis] = useState<PreperedPerson[]>([]);\n\n  useEffect(() => {\n    setPreparedLis(filteredPeople);\n  }, []);\n\n  return (\n    <>\n      <table className=\"table is-striped\">\n        <thead>\n          <tr>\n            <th className=\"head\">name</th>\n            <th className=\"head\">sex</th>\n            <th className=\"head\">born</th>\n            <th className=\"head\">died</th>\n            <th className=\"head\">mother</th>\n            <th className=\"head\">father</th>\n          </tr>\n        </thead>\n        <tbody>\n          {preparedList.map((person: PreperedPerson) => (\n            <tr className=\"Person\" key={person.slug}>\n              <PersonRow person={person} />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api/api';\nimport { Person, PreperedPerson } from '../../react-app-env';\nimport { PeopleTable } from '../peopleTable/peopleTable';\n\nconst replaceParent = (array: Person[]) => {\n  return array.map((person: Person, _index, arr) => (\n    {\n      ...person,\n      fatherName: arr.find(man => man.name === person.fatherName) || null,\n      motherName: arr.find(woman => woman.name === person.motherName) || null,\n    }\n  ));\n};\n\nexport const PeoplePage = () => {\n  const [allPeople, setAllPeaple] = useState<PreperedPerson[]>([]);\n  // eslint-disable-next-line max-len\n  const [filteredPeople, setFilteredPeaple] = useState<PreperedPerson[]>(allPeople);\n\n  useEffect(() => {\n    getPeople().then((array) => setAllPeaple(replaceParent(array)));\n  }, []);\n\n  useEffect(() => {\n    setFilteredPeaple(allPeople);\n  }, [allPeople]);\n\n  return (\n    <>\n      {filteredPeople.length === 0\n        ? (\n          <p>Please wait the list is loading...</p>\n        ) : (\n          <PeopleTable filteredPeople={filteredPeople} />\n        )}\n    </>\n  );\n};\n","import {\n  Link,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/homePage/HomePage';\nimport { PeoplePage } from './components/peoplePage/peoplePage';\n\nconst App = () => (\n  <div className=\"App container\">\n    <header>\n      <nav>\n        <Link to=\"/\">HomePage</Link>\n        {' '}\n        <Link to=\"/people\">PeoplePage</Link>\n      </nav>\n    </header>\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      <Route\n        path=\"*\"\n        element={\n          <p>Page not found</p>\n        }\n      />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport '../node_modules/bulma/css/bulma-rtl.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}